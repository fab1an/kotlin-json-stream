import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "1.9.23"
    id("convention.publication")
    id "org.jetbrains.dokka" version "1.9.20"
}

group 'com.fab1an'
version '1.2.0-SNAPSHOT'

repositories {
    mavenCentral()
}

kotlin {
    mingwX64()
    iosArm64()
    iosX64()
    iosSimulatorArm64()
    macosArm64()
    macosX64()
    linuxX64()
    linuxArm64()
    jvm {
        jvmToolchain(21)
        withJava()
        testRuns.named("test") {
            executionTask.configure {
                useJUnitPlatform()
            }
        }
    }
    js(IR) {
        nodejs()
    }

    applyDefaultHierarchyTemplate()

    sourceSets {
        commonMain {
            dependencies {
                api "com.squareup.okio:okio:3.9.0"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test")
            }
        }
    }
}

dependencies {
    dokkaPlugin("org.jetbrains.dokka:versioning-plugin:1.9.20")
}

tasks.withType(DokkaTask.class) {
    dokkaSourceSets {
        configureEach {
            externalDocumentationLink {
                url.set(new URL("https://square.github.io/okio/3.x/okio/"))
                packageListUrl.set(new URL("https://square.github.io/okio/3.x/okio/okio/package-list"))
            }
        }
    }
    String versioningPluginConfiguration = """
    {
      "olderVersionsDir": "${projectDir.toPath().resolve("documentation")}"
    }
    """
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.versioning.VersioningPlugin": versioningPluginConfiguration]
    )
}

task buildDocumentation(dependsOn: ['dokkaHtml']) {
    doLast {
        if (!project.version.toString().endsWith("-SNAPSHOT")) {
            delete("documentation/${project.version}")
            copy {
                from project.layout.buildDirectory.dir("dokka/html")
                into "documentation/${project.version}"
            }
            delete("documentation/${project.version}/older")
        }
    }
}
